@model Validate.Result;
@{
    ViewBag.Title = "Validate - Swedish Personal Identity Numbers";
}

<h1 class="h2">
    Validate
    <small class="text-muted">Swedish Personal Identity Numbers</small>
</h1>

<p class="lead py-3">
    A Swedish personal identity number can be written in a lot of different ways. It normally takes one of the standard forms (YYMMDD-XXXX, YYMMDD+XXXX or YYYYMMDDXXXX) but can also include variations with whitespaces etc. Use the form below to parse a value and find out data that be extracted form the number such as date of birth and gender.
</p>


<section class="card bg-white text-center mb-3">
    <div class="card-body py-5">
        <div style="max-width: 400px; margin: 0 auto;">
            <form asp-action="Validate" method="get">
                <div class="form-group">
                    <label asp-for="NumberInput">Swedish Personal Identity Number</label>
                    <input type="tel" class="form-control form-control-lg text-center" name="number" asp-for="NumberInput" required maxlength="50" placeholder="YYMMDD-XXXX" />
                </div>
                <div class="form-group">
                    <button type="submit" class="btn btn-primary btn-block">Parse &amp; Validate</button>
                </div>
            </form>
        </div>
    </div>
</section>

@if (!string.IsNullOrEmpty(Model.NumberInput))
{
    if (Model.IsValid)
    {
        <div class="alert alert-success text-center" role="alert">
            <i class="fal fa-badge-check"></i> <strong>@Model.NumberInput</strong> is recognized as a valid Swedish Personal Identity Number!
        </div>

        if (Model.Number.HasValue)
        {
            var number = Model.Number.Value;

            <section class="card bg-white mt-3">
                <h4 class="card-header text-center"><i class="fal fa-id-badge"></i> @number.TenDigitString</h4>
                <div class="card-body px-0 py-0">
                    <table class="table table-hover table-striped ii-spin-info-table my-0">
                        <tr>
                            <th>10 Digit String</th>
                            <td>@number.TenDigitString</td>
                            <td>
                                <a href="#" onclick="identityinfonet.copyToClipboard('@number.TenDigitString');return false;" title="Copy '@number.TenDigitString' to clipboard"><i class="fal fa-clipboard"></i></a>
                            </td>
                            <td>This is the most common format, often refered to as YYMMDD-XXXX. The year is represented as 2 digits and the delimiter provides the info required to get the full year.</td>
                        </tr>
                        <tr>
                            <th>12 Digit String</th>
                            <td>@number.TwelveDigitString</td>
                            <td>
                                <a href="#" onclick="identityinfonet.copyToClipboard('@number.TwelveDigitString');return false;" title="Copy '@number.TwelveDigitString' to clipboard"><i class="fal fa-clipboard"></i></a>
                            </td>
                            <td>The format that is the receomended one to use when persisting it as it contains the full year as digits and no delmiter that changes over time..</td>
                        </tr>
                        <tr>
                            <th>Year</th>
                            <td>@number.Year.ToString("0000")</td>
                            <td></td>
                            <td>The year the person was born.</td>
                        </tr>
                        <tr>
                            <th>Month</th>
                            <td>@number.Month.ToString("00")</td>
                            <td></td>
                            <td>The month the person was born.</td>
                        </tr>
                        <tr>
                            <th>Day</th>
                            <td>@number.Day.ToString("00")</td>
                            <td></td>
                            <td>
                                The day the person was born.<br />
                                <em>Note:</em> Because of a limited amount of birth numbers per day (1000) a person might not receive the exact day as the day part.
                                It can be a few days later or earlier, but always within the same month.
                            </td>
                        </tr>
                        <tr>
                            <th>Delimiter</th>
                            <td>@number.Delimiter</td>
                            <td></td>
                            <td>By default a hyphen (-) but turns into a plus (+) the year the person turns 100.</td>
                        </tr>
                        <tr>
                            <th>Birth Number</th>
                            <td>@number.BirthNumber.ToString("000")</td>
                            <td></td>
                            <td>A number to uniqely identity a person born on the day. 1000 in total, 500 female (even numbers) and 500 male (odd numbers).</td>
                        </tr>
                        <tr>
                            <th>Checksum</th>
                            <td>@number.Checksum</td>
                            <td></td>
                            <td>Calculated using the <a href="https://en.wikipedia.org/wiki/Luhn_algorithm">Luhn algorithm</a> on the 10 digit string (without delimiter).</td>
                        </tr>
                        <tr>
                            <th>Gender</th>
                            <td>@number.GenderHint</td>
                            <td></td>
                            <td>Extracted from Birth Number.</td>
                        </tr>
                        <tr>
                            <th>Date of Birth</th>
                            <td>@number.DateOfBirthHint.ToShortDateString()</td>
                            <td></td>
                            <td>Extracted from Year, Month and Day. See potential limitation on Day.</td>
                        </tr>
                        <tr>
                            <th>Age</th>
                            <td>@(number.AgeHint.HasValue ? number.AgeHint.Value.ToString("D") : "Not yet born")</td>
                            <td></td>
                            <td>Extracted from Date of Birth. See potential limitation on Day.</td>
                        </tr>
                    </table>
                </div>
            </section>
        }
    }
    else
    {
        <div class="alert alert-danger text-center" role="alert">
            <i class="fal fa-exclamation-triangle"></i> <strong>@Model.NumberInput</strong> is not recognized as a valid Swedish Personal Identity Number!
        </div>
    }
}